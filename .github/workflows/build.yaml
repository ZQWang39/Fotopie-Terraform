name: Provision or Destroy AWS infrastructure 

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main 

# jobs:
#   provision:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         terraform_version: '1.1.0'

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-southeast-2
    
#     - name: Terraform provision AWS resources
#       working-directory: ./terraform
#       run: |
#          terraform init
#          terraform apply --auto-approve
  
#   de-provision:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         terraform_version: '1.1.0'

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-southeast-2
    
#     - name: Terraform provision AWS resources
#       working-directory: ./terraform
#       run: terraform destroy --auto-approve


#       name: Provision or Destroy Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main 
  workflow_dispatch:

jobs:
  provision_or_destroy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.1.0'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Prompt for Infrastructure Action
      id: prompt
      run: |
        echo "::set-output name=infrastructure::$(bash -c \"read -p 'Do you want to provision or destroy the infrastructure? ' action && echo \$action\")"
    - name: Provision Infrastructure
      if: ${{ steps.prompt.outputs.infrastructure == 'provision' }}
      run: |
        terraform init
        terraform apply --auto-approve
    - name: Destroy Infrastructure
      if: ${{ steps.prompt.outputs.infrastructure == 'destroy' }}
      run: |
        terraform destroy --auto-approve
